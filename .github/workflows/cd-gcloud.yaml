name: CD Pipeline

on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed

jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: '1.4.0'

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      - name: Terraform Init
        run: terraform init
        env:
          GOOGLE_CLOUD_KEYFILE_JSON: ${{ secrets.GCP_CREDENTIALS }}
          TF_VAR_project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Terraform Plan
        env:
          GOOGLE_CLOUD_KEYFILE_JSON: ${{ secrets.GCP_CREDENTIALS }}
          TF_VAR_project_id: ${{ secrets.GCP_PROJECT_ID }}
        run: terraform plan -out=tfplan

      - name: Terraform Apply
        env:
          GOOGLE_CLOUD_KEYFILE_JSON: ${{ secrets.GCP_CREDENTIALS }}
          TF_VAR_project_id: ${{ secrets.GCP_PROJECT_ID }}
        run: terraform apply -auto-approve tfplan

  deploy:
    runs-on: ubuntu-latest
    needs: terraform

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      - name: Set up gcloud CLI
        run: |
          gcloud auth activate-service-account --key-file=$GCP_CREDENTIALS
          gcloud container clusters get-credentials ${{ secrets.GKE_CLUSTER_NAME }} --region ${{ secrets.GKE_REGION }} --project ${{ secrets.GCP_PROJECT_ID }}

      - name: Apply Kubernetes manifests
        run: |
          kubectl apply -f ./configmap.yaml
          kubectl apply -f ./mysql.yaml
          kubectl apply -f ./app.yaml
          kubectl apply -f ./secret.yaml
          kubectl rollout restart deployment app-deployment
