name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: '1.4.0'

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Terraform Init
        run: terraform init
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS_KEY }}
          TF_VAR_client_id: ${{ secrets.ARM_CLIENT_ID }}
          TF_VAR_client_secret: ${{ secrets.ARM_CLIENT_SECRET }}
          TF_VAR_tenant_id: ${{ secrets.ARM_TENANT_ID }}
          TF_VAR_subscription_id: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        
      - name: Terraform Plan
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS_KEY }}
          TF_VAR_client_id: ${{ secrets.ARM_CLIENT_ID }}
          TF_VAR_client_secret: ${{ secrets.ARM_CLIENT_SECRET }}
          TF_VAR_tenant_id: ${{ secrets.ARM_TENANT_ID }}
          TF_VAR_subscription_id: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        run: terraform plan -out=tfplan

      - name: Terraform Apply
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS_KEY }}
          TF_VAR_client_id: ${{ secrets.ARM_CLIENT_ID }}
          TF_VAR_client_secret: ${{ secrets.ARM_CLIENT_SECRET }}
          TF_VAR_tenant_id: ${{ secrets.ARM_TENANT_ID }}
          TF_VAR_subscription_id: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        run: terraform apply -auto-approve tfplan

      - name: Upload Kubeconfig Artifact
        uses: actions/upload-artifact@v3
        with:
          name: kubeconfig
          path: kubeconfig.yaml 

  deploy:
    runs-on: ubuntu-latest
    needs: terraform

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download Kubeconfig Artifact
        uses: actions/download-artifact@v3
        with:
          name: kubeconfig  

      - name: Set up kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'latest'

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: '1.4.0'          

      - name: Get kubeconfig from Terraform output
        run: |
          terraform output -raw kube_config > kubeconfig.yaml
          export KUBECONFIG=kubeconfig.yaml          

      - name: Get AKS credentials
        run: |
          az aks get-credentials --resource-group aks-resource-group --name aks-cluster
          export KUBECONFIG=~/.kube/config

      - name: Copy Files to AKS
        run: |
          kubectl cp <local-path> <namespace>/<pod-name>:<container-path>
        env:
          KUBECONFIG: ${{ secrets.KUBECONFIG }}          

      - name: Apply Kubernetes manifests
        run: |
          kubectl apply -f ./configmap.yaml
          kubectl apply -f ./mysql.yaml
          kubectl apply -f ./app.yaml
          kubectl apply -f ./secret.yaml